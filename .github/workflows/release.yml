name: Release

on:
  push:
    tags:
      - 'release/*'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set build variables
      run: |
        GIT_VER=${GITHUB_REF##*/}
        GIT_TAG=${GITHUB_REF##refs/tags/}
        if [[ ${GIT_VER} =~ ^[0-9]+[.][0-9]+[.][0-9]+[-][A-Za-z0-9]+ ]]
        then
          GH_TYPE='Release Candidate'
        else
          GH_TYPE='Release'
        fi
        echo "GIT_VER=${GIT_VER}" >> ${GITHUB_ENV}
        echo "GIT_TAG=${GIT_TAG}" >> ${GITHUB_ENV}
        echo "GH_TYPE=${GH_TYPE}" >> ${GITHUB_ENV}
        cat ${GITHUB_ENV}

    - name: Inject version info into main.lua
      run: |
        # Parse GIT_VER into components
        IFS='.-' read -r MAJOR MINOR REVISION SUFFIX <<< "${{ env.GIT_VER }}"

        echo "Parsed version: $MAJOR $MINOR $REVISION $SUFFIX"

        # Update full config.version line
        sed -i "s/config.version = {.*}/config.version = {major = $MAJOR, minor = $MINOR, revision = $REVISION, suffix = \"$SUFFIX\"}/" scripts/inavdash/main.lua

        # Set logging settings
        sed -i 's/\(config.logLevel= \)".*"/\1"off"/' scripts/inavdash/main.lua
        sed -i 's/\(config.logToFile = \)[^ ]*/\1false/' scripts/inavdash/main.lua
        sed -i 's/\(config.logMSP = \)[^ ]*/\1false/' scripts/inavdash/main.lua

        # Output for verification
        grep 'config.version' scripts/inavdash/main.lua
        grep 'config.log' scripts/inavdash/main.lua

    - name: Make release package
      run: zip -q -r -9 "inav-dashboard-ethos-${{ env.GIT_VER }}.zip" scripts

    - name: Create Release
      run: |
        .github/scripts/extract-release-notes.py "${{ env.GIT_VER }}" Releases.md > Notes.md
        gh release create ${{ env.GIT_TAG }} --notes-file Notes.md --title "Inav Dashboard for Ethos - ${{ env.GH_TYPE }} ${{ env.GIT_VER }}" *.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}